#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

postgresql_ready() {
python << END
import sys

import psycopg2
import os

try:
    endpoint_id = os.getenv('POSTGRES_ENDPOINT')
    if endpoint_id:
          psycopg2.connect(
          dbname=os.getenv('POSTGRES_DB_NAME'),
          user=os.getenv('POSTGRES_USER'),
          password=os.getenv('POSTGRES_PASS'),
          host=os.getenv('POSTGRES_HOST'),
          port=os.getenv('POSTGRES_PORT'),
          sslmode=os.getenv('POSTGRES_SSL_MODE'),
          options=f'endpoint={endpoint_id}'
      )
    else:
      psycopg2.connect(
          dbname=os.getenv('POSTGRES_DB_NAME'),
          user=os.getenv('POSTGRES_USER'),
          password=os.getenv('POSTGRES_PASS'),
          host=os.getenv('POSTGRES_HOST'),
          port=os.getenv('POSTGRES_PORT'),
          sslmode=os.getenv('POSTGRES_SSL_MODE')
      )
except psycopg2.OperationalError as e:
    print(e)
    sys.exit(-1)
sys.exit(0)

END
}
until postgresql_ready; do
  >&2 echo 'Waiting for PostgreSQL Database to become available...'
  sleep 1
done
>&2 echo 'PostgreSQL Database is available'

exec "$@"
